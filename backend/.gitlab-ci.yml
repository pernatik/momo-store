variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  DEV_HOST: momostore.fun
  DEV_USER: ansible

include:
  - project: "templates/ci"
    file: "DockerInDockerTemplate.yml"

stages:
  - build
  - test
  - deploy

build-backend:
  stage: build
  image: gitlab.praktikum-services.ru:5050/std-011-065/momo-store/docker:20.10.12-dind-rootless

  before_script:
    - until docker info; do sleep 1; done
    # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd backend
    - >
      docker build
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/momo-backend:${VERSION}
      --tag $CI_REGISTRY_IMAGE/momo-backend:latest
      .
    - docker push $CI_REGISTRY_IMAGE/momo-backend --all-tags

test-backend:
  stage: test
  image: golang:1.16
  needs:
    - build-backend
  script:
    - cd backend
    - go test -v ./...

deploy-backend:
  # needs:
  #   - upload-frontend-latest
  #   rules:
  #     - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  #       when: manual
  #     - if: '$CI_COMMIT_BRANCH == "main"'
  #       when: manual
  # when: manual # Развертывание по требованию
  stage: deploy
  environment: # ENV
    name: staging # ENV
    url: https://momostore.fun/ # ENV
  script:
    #устанавливаем ssh-agent для удобства аутентификации по ssh
    - "command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )"
    - eval $(ssh-agent -s)
    #сохраняем сгенеренный ранее приватный ключ для раннера
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - cat ~/.ssh/known_hosts
    - echo "StrictHostKeyChecking no" >> /etc/ssh/ssh_config
    - ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_URL=${NEXUS_REPO_URL}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}"; export "REGISTRY_USER=${REGISTRY_USER}"; export "REGISTRY_PASSWORD=${REGISTRY_PASSWORD}"; export "REGISTRY_URL=${REGISTRY_URL}"; setsid /bin/bash -s " < ./backend/backend-deploy.sh
